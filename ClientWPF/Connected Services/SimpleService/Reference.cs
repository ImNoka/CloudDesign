//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWPF.SimpleService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SimpleService.ISimpleService")]
    public interface ISimpleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArchiveFolderService/AddFolder", ReplyAction="http://tempuri.org/IArchiveFolderService/AddFolderResponse")]
        void AddFolder(string name, int parentFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArchiveFolderService/AddFolder", ReplyAction="http://tempuri.org/IArchiveFolderService/AddFolderResponse")]
        System.Threading.Tasks.Task AddFolderAsync(string name, int parentFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArchiveFolderService/GetFolders", ReplyAction="http://tempuri.org/IArchiveFolderService/GetFoldersResponse")]
        string GetFolders(int parentFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArchiveFolderService/GetFolders", ReplyAction="http://tempuri.org/IArchiveFolderService/GetFoldersResponse")]
        System.Threading.Tasks.Task<string> GetFoldersAsync(int parentFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArchiveFolderService/GetFoldersJson", ReplyAction="http://tempuri.org/IArchiveFolderService/GetFoldersJsonResponse")]
        string GetFoldersJson(int parentFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArchiveFolderService/GetFoldersJson", ReplyAction="http://tempuri.org/IArchiveFolderService/GetFoldersJsonResponse")]
        System.Threading.Tasks.Task<string> GetFoldersJsonAsync(int parentFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        string GetUser(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        System.Threading.Tasks.Task<string> GetUserAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        void AddUser(string name, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(string name, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RemoveUser", ReplyAction="http://tempuri.org/IUserService/RemoveUserResponse")]
        void RemoveUser(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RemoveUser", ReplyAction="http://tempuri.org/IUserService/RemoveUserResponse")]
        System.Threading.Tasks.Task RemoveUserAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISimpleServiceChannel : ClientWPF.SimpleService.ISimpleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimpleServiceClient : System.ServiceModel.ClientBase<ClientWPF.SimpleService.ISimpleService>, ClientWPF.SimpleService.ISimpleService {
        
        public SimpleServiceClient() {
        }
        
        public SimpleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimpleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddFolder(string name, int parentFolderId) {
            base.Channel.AddFolder(name, parentFolderId);
        }
        
        public System.Threading.Tasks.Task AddFolderAsync(string name, int parentFolderId) {
            return base.Channel.AddFolderAsync(name, parentFolderId);
        }
        
        public string GetFolders(int parentFolderId) {
            return base.Channel.GetFolders(parentFolderId);
        }
        
        public System.Threading.Tasks.Task<string> GetFoldersAsync(int parentFolderId) {
            return base.Channel.GetFoldersAsync(parentFolderId);
        }
        
        public string GetFoldersJson(int parentFolderId) {
            return base.Channel.GetFoldersJson(parentFolderId);
        }
        
        public System.Threading.Tasks.Task<string> GetFoldersJsonAsync(int parentFolderId) {
            return base.Channel.GetFoldersJsonAsync(parentFolderId);
        }
        
        public string GetUser(string name) {
            return base.Channel.GetUser(name);
        }
        
        public System.Threading.Tasks.Task<string> GetUserAsync(string name) {
            return base.Channel.GetUserAsync(name);
        }
        
        public void AddUser(string name, string pass) {
            base.Channel.AddUser(name, pass);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(string name, string pass) {
            return base.Channel.AddUserAsync(name, pass);
        }
        
        public void RemoveUser(string name) {
            base.Channel.RemoveUser(name);
        }
        
        public System.Threading.Tasks.Task RemoveUserAsync(string name) {
            return base.Channel.RemoveUserAsync(name);
        }
    }
}
